opcounters-insert//.opcounters.insert
opcounters-query//.opcounters.query
opcounters-update//.opcounters.update
opcounters-delete//.opcounters.delete
opcounters-getmore//.opcounters.getmore
opcounters-command//.opcounters.command
opcountersRepl-insert//.opcountersRepl.insert
opcountersRepl-query//.opcountersRepl.query
opcountersRepl-update//.opcountersRepl.update
opcountersRepl-delete//.opcountersRepl.delete
opcountersRepl-getmore//.opcountersRepl.getmore
opcountersRepl-command//.opcountersRepl.command
connections-current//.connections.current
connections-totalCreated//.connections.totalCreated
connections-available//.connections.available
metrics-cursor-timedOut/moRmQuotation/.metrics.cursor.timedOut."$numberLong"
metrics-cursor-open-noTimeout/moRmQuotation/.metrics.cursor.open.noTimeout."$numberLong"
metrics-cursor-open-pinned/moRmQuotation/.metrics.cursor.open.pinned."$numberLong"
metrics-cursor-open-total/moRmQuotation/.metrics.cursor.open.total."$numberLong"
network-bytesIn/moRmQuotation/.network.bytesIn."$numberLong"
network-bytesOut/moRmQuotation/.network.bytesOut."$numberLong"
wiredTiger-concurrentTransactions-write-out//.wiredTiger.concurrentTransactions.write.out
wiredTiger-concurrentTransactions-write-available//.wiredTiger.concurrentTransactions.write.available
wiredTiger-concurrentTransactions-read-out//.wiredTiger.concurrentTransactions.read.out
wiredTiger-concurrentTransactions-read-available//.wiredTiger.concurrentTransactions.read.available
metrics-operation-scanAndOrder/moRmQuotation/.metrics.operation.scanAndOrder."$numberLong"
metrics-operation-writeConflicts/moRmQuotation/.metrics.operation.writeConflicts."$numberLong"
metrics-document-deleted/moRmQuotation/.metrics.document.deleted."$numberLong"
metrics-document-inserted/moRmQuotation/.metrics.document.inserted."$numberLong"
metrics-document-returned/moRmQuotation/.metrics.document.returned."$numberLong"
metrics-document-updated/moRmQuotation/.metrics.document.updated."$numberLong"
metrics-queryExecutor-scanned/moRmQuotation/.metrics.queryExecutor.scanned."$numberLong"
metrics-queryExecutor-scannedObjects/moRmQuotation/.metrics.queryExecutor.scannedObjects."$numberLong"
metrics-ttl-deletedDocuments/moRmQuotation/.metrics.ttl.deletedDocuments."$numberLong"
metrics-ttl-passes/moRmQuotation/.metrics.ttl.passes."$numberLong"
moveChunk-donorCount/moRmQuotation/.shardingStatistics.countDonorMoveChunkStarted."$numberLong"
globalLock-activeClients-total//.globalLock.activeClients.total
globalLock-activeClients-readers//.globalLock.activeClients.readers
globalLock-activeClients-writers//.globalLock.activeClients.writers
globalLock-currentQueue-total//.globalLock.currentQueue.total
globalLock-currentQueue-readers//.globalLock.currentQueue.readers
globalLock-currentQueue-writers//.globalLock.currentQueue.writers
wiredTiger-cache-usage/moCalcPer 1/.wiredTiger.cache."bytes currently in the cache",.wiredTiger.cache."maximum bytes configured"
wiredTiger-cache-dirty-usage/moCalcPer 1/.wiredTiger.cache."tracked dirty bytes in the cache",.wiredTiger.cache."maximum bytes configured"
conn-usage/moCalcPer 2/.connections.current,.connections.current,.connections.available
repl-lag/moCalcTimespan/.repl as {primary:$p, me:$m} | .repl.replicationProgress[] | select(.host==$m or .host==$p) | .optime.ts."$timestamp".t